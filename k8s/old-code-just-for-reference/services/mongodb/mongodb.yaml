apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init
  namespace: profile-service
data:
  init.js: |
    db = db.getSiblingDB('admin');
    db.createUser({
      user: 'admin',
      pwd: 'admin123',
      roles: [
        { role: 'userAdminAnyDatabase', db: 'admin' },
        { role: 'readWriteAnyDatabase', db: 'admin' }
      ]
    });
    rs.initiate({
      _id: "rs0",
      members: [
        { _id: 0, host: "mongodb-0.mongodb.profile-service.svc.cluster.local:27017" }
      ]
    });
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secrets
  namespace: profile-service
type: Opaque
data:
  username: YWRtaW4=
  password: YWRtaW4xMjM=
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: profile-service
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: profile-service
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          command:
            - mongod
            - "--bind_ip_all"
            - "--replSet"
            - "rs0"
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: password
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
            - name: mongodb-init
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: mongodb-init
          configMap:
            name: mongodb-init
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
