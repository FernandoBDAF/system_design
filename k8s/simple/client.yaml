apiVersion: apps/v1
kind: Deployment
metadata:
  name: profile-client
  namespace: profile-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: profile-client
  template:
    metadata:
      labels:
        app: profile-client
    spec:
      serviceAccountName: pod-reader
      containers:
        - name: client
          image: profile-client:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          env:
            - name: NEXT_PUBLIC_API_URL
              value: "http://profile-service:8080"
            - name: NEXT_PUBLIC_WS_URL
              value: "ws://profile-service:8080/ws"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: kube-api-access
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: kube-api-access
          projected:
            sources:
              - serviceAccountToken:
                  expirationSeconds: 3600
                  path: token
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
              - downwardAPI:
                  items:
                    - path: namespace
                      fieldRef:
                        fieldPath: metadata.namespace
---
apiVersion: v1
kind: Service
metadata:
  name: profile-client
  namespace: profile-service
spec:
  type: NodePort
  selector:
    app: profile-client
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30030
